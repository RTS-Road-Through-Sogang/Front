{"ast":null,"code":"var _jsxFileName = \"D:\\\\2023\\\\rts\\\\front2\\\\Front\\\\src\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport loginimage from \"./images/login.jpg\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { faEyeSlash, faEye } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport InputField from \"./InputField\";\nimport Modal from \"./Modal\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BASE_URL = process.env.BASE_URL;\nconst SignUp = () => {\n  _s();\n  const navigate = useNavigate();\n  const [showPswd, setShowPswd] = useState(false);\n  const [showConfirmPswd, setShowConfirmPswd] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [studentid, setStudentid] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [major, setMajor] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isEmailVerified, setIsEmailVerified] = useState(false);\n  const [errors, setError] = useState({\n    name: \"\",\n    studentid: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    major: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const handleSignup = async e => {\n    e.preventDefault();\n    let newErrors = {\n      ...errors,\n      name: \"\",\n      studentid: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      major: \"\",\n      email: \"\"\n    };\n    if (!name.trim()) {\n      newErrors.name = \"이름을 입력하세요\";\n    }\n    if (!studentid.trim()) {\n      newErrors.studentid = \"학번을 입력하세요\";\n    }\n    if (!password.trim()) {\n      newErrors.password = \"비밀번호를 입력하세요\";\n    }\n    if (!passwordConfirm.trim()) {\n      newErrors.passwordConfirm = \"비밀번호 확인란을 입력하세요\";\n    }\n    if (password !== passwordConfirm) {\n      newErrors.passwordConfirm = \"비밀번호와 비밀번호 확인이 일치하지 않습니다!\";\n    }\n    if (major === \"\") {\n      alert(\"전공을 선택하세요!\");\n    }\n    if (!email.trim()) {\n      newErrors.email = \"이메일을 입력하세요\";\n    }\n    if (!isEmailVerified) {\n      alert(\"이메일 인증을 완료해주세요.\");\n      return;\n    }\n    setError(newErrors);\n    try {\n      const response = await fetch(`${BASE_URL}/users/signup/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name,\n          student_number: studentid,\n          major: major,\n          password: password,\n          email: email\n        })\n      });\n      const data = await response.json();\n      if (data.message === \"signup completed\") {\n        alert(\"회원가입 성공\");\n        navigate(\"/roadmap\");\n      } else {\n        setError(prevErrors => ({\n          ...prevErrors,\n          message: data.message || \"회원 가입 실패!\"\n        }));\n      }\n    } catch (error) {\n      console.error(error);\n      setError(prevErrors => ({\n        ...prevErrors,\n        message: \"서버와의 통신에 실패했습니다.\"\n      }));\n    }\n  };\n  const toggleConfirmPswdVisibility = () => {\n    setShowConfirmPswd(!showConfirmPswd);\n  };\n  const openModal = () => {\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n  };\n  const togglePswdVisibility = () => {\n    setShowPswd(!showPswd);\n  };\n  const sendVerificationEmail = async () => {\n    try {\n      const response = await fetch(`${BASE_URL}/users/verify_email/`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email + \"@sogang.ac.kr\"\n        })\n      });\n      const data = await response.json();\n    } catch (error) {\n      alert(\"인증번호 발송에 실패했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainSection, {\n      children: [/*#__PURE__*/_jsxDEV(MainImage, {\n        src: loginimage,\n        alt: \"Main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n        children: [/*#__PURE__*/_jsxDEV(LoginText, {\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          name: \"username\",\n          placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          name: \"studentid\",\n          placeholder: \"\\uD559\\uBC888\\uC790\\uB9AC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694 ex) 20201234\",\n          value: studentid,\n          onChange: e => setStudentid(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), errors.studentid && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: errors.studentid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(PasswordWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: showPswd ? \"text\" : \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledIcon, {\n            icon: showPswd ? faEye : faEyeSlash,\n            onClick: togglePswdVisibility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(PasswordWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: showConfirmPswd ? \"text\" : \"password\",\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC\\uD55C\\uBC88 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            value: passwordConfirm,\n            onChange: e => setPasswordConfirm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledIcon, {\n            icon: showConfirmPswd ? faEye : faEyeSlash,\n            onClick: toggleConfirmPswdVisibility\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), errors.passwordConfirm && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: errors.passwordConfirm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectWrapper, {\n          children: /*#__PURE__*/_jsxDEV(StyledSelect, {\n            value: major,\n            onChange: e => setMajor(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"\\uBCF8\\uC804\\uACF5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\\uACBD\\uC81C\",\n              children: \"\\uACBD\\uC81C\\uD559\\uACFC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\\uACBD\\uC601\",\n              children: \"\\uACBD\\uC601\\uD559\\uACFC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\\uCEF4\\uD4E8\\uD130\\uACF5\\uD559\\uACFC\",\n              children: \"\\uCEF4\\uD4E8\\uD130\\uACF5\\uD559\\uACFC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmailInputWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(EmailInput, {\n            name: \"email\",\n            placeholder: \"\\uC11C\\uAC15\\uB300\\uD559\\uAD50 email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EmailDomainLabel, {\n            children: \"@sogang.ac.kr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(Verify, {\n          onClick: () => {\n            if (email.includes(\"@\")) {\n              setError(prevErrors => ({\n                ...prevErrors,\n                email: \"올바른 이메일 형식이 아닙니다! @sogang.ac.kr 도메인은 자동으로 추가됩니다.\"\n              }));\n            } else {\n              openModal();\n              sendVerificationEmail();\n            }\n          },\n          children: \"\\uC774\\uBA54\\uC77C \\uC778\\uC99D \\uD0A4 \\uBC1C\\uC1A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isVisible: showModal,\n          closeModal: closeModal,\n          email: email + \"@sogang.ac.kr\",\n          onVerified: verified => setIsEmailVerified(verified)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          type: \"submit\",\n          onClick: handleSignup,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUp, \"L+z2l/6eg0y32F2UTc2DqypsFos=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nconst GlobalStyles = createGlobalStyle`\n  body {\n    margin: 0;\n  }\n`;\n_c2 = GlobalStyles;\nconst MainSection = styled.div`\n  width: 100%;\n\n  justify-content: center;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-position: top center;\n  background-size: cover;\n  background-attachment: fixed;\n  position: relative;\n\n  margin: 0 auto;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    width: 100%;\n    padding: 40px 20px;\n    justify-content: center;\n  }\n`;\n_c3 = MainSection;\nconst MainImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n_c4 = MainImage;\nconst LoginForm = styled.div`\n  position: absolute;\n  border: 1px solid #ababab;\n  border-radius: 10px;\n  box-shadow: 5px 10px 10px 1px rgba(0, 0, 0, 0.3);\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  padding: 45px;\n  background: rgba(255, 255, 255, 0.8);\n\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 300px;\n`;\n_c5 = LoginForm;\nconst LoginText = styled.div`\n  font-size: 1.5em;\n  font-weight: 700;\n`;\n_c6 = LoginText;\nconst Input = styled.input`\n  padding: 13px;\n  border-radius: 10px;\n  border: 1px solid #ababab;\n  background: #fff;\n  width: 89%;\n`;\n_c7 = Input;\nconst PasswordWrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n`;\n_c8 = PasswordWrapper;\nconst StyledIcon = styled(FontAwesomeIcon)`\n  position: absolute;\n  right: 10px;\n  cursor: pointer;\n`;\n_c9 = StyledIcon;\nconst StyledButton = styled.button`\n  cursor: pointer;\n  width: 20.5vw;\n  height: 6vh;\n  border-radius: 60px;\n  border: 2px solid #ff6262;\n  background: #ff6262;\n  margin-top: 10px;\n  margin-bottom: 10px;\n\n  @media (max-width: 768px) {\n    width: 50vw;\n    height: 7vh;\n  }\n  span {\n    color: #fff;\n    text-align: center;\n    font-family: Noto Sans;\n    font-size: 1.1rem;\n    font-style: normal;\n    font-weight: 700;\n    line-height: normal;\n  }\n`;\n_c10 = StyledButton;\nconst Verify = styled.div`\n  text-align: center;\n  text-decoration: underline;\n  color: #7a7a7a;\n  cursor: pointer;\n`;\n_c11 = Verify;\nconst StyledSelect = styled.select`\n  padding: 13px;\n  border-radius: 10px;\n  border: 1px solid #ababab;\n  background: #fff;\n  width: 98.5%;\n  appearance: none;\n  padding-right: 30px;\n`;\n_c12 = StyledSelect;\nconst SelectWrapper = styled.div`\n  position: relative;\n  width: 89%%;\n\n  & svg {\n    position: absolute;\n    top: 50%;\n    right: 10px;\n    transform: translateY(-50%);\n  }\n`;\n_c13 = SelectWrapper;\nconst EmailInputWrapper = styled.div`\n  display: flex;\n  width: 98.5%;\n  align-items: center;\n  border: 1px solid #ababab;\n  border-radius: 10px;\n  margin-top: 10px;\n  background: rgba(255, 255, 255, 0.8);\n`;\n_c14 = EmailInputWrapper;\nconst EmailDomainLabel = styled.span`\n  padding: 13px;\n  pointer-events: none;\n  color: #707070;\n  background: rgba(255, 255, 255, 0.8);\n  border-radius: 0 10px 10px 0;\n`;\n_c15 = EmailDomainLabel;\nconst EmailInput = styled(Input)`\n  flex-grow: 1; /* input 필드가 가능한 영역을 모두 차지하도록 함 */\n  border-radius: 10px 0 0 10px;\n  border: none;\n`;\n_c16 = EmailInput;\nconst ErrorMessage = styled.div`\n  color: red;\n  font-size: 0.8rem;\n  margin-left: 1rem;\n`;\n_c17 = ErrorMessage;\nexport default SignUp;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17;\n$RefreshReg$(_c, \"SignUp\");\n$RefreshReg$(_c2, \"GlobalStyles\");\n$RefreshReg$(_c3, \"MainSection\");\n$RefreshReg$(_c4, \"MainImage\");\n$RefreshReg$(_c5, \"LoginForm\");\n$RefreshReg$(_c6, \"LoginText\");\n$RefreshReg$(_c7, \"Input\");\n$RefreshReg$(_c8, \"PasswordWrapper\");\n$RefreshReg$(_c9, \"StyledIcon\");\n$RefreshReg$(_c10, \"StyledButton\");\n$RefreshReg$(_c11, \"Verify\");\n$RefreshReg$(_c12, \"StyledSelect\");\n$RefreshReg$(_c13, \"SelectWrapper\");\n$RefreshReg$(_c14, \"EmailInputWrapper\");\n$RefreshReg$(_c15, \"EmailDomainLabel\");\n$RefreshReg$(_c16, \"EmailInput\");\n$RefreshReg$(_c17, \"ErrorMessage\");","map":{"version":3,"names":["React","useState","loginimage","styled","createGlobalStyle","faEyeSlash","faEye","FontAwesomeIcon","InputField","Modal","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","BASE_URL","process","env","SignUp","_s","navigate","showPswd","setShowPswd","showConfirmPswd","setShowConfirmPswd","showModal","setShowModal","name","setName","studentid","setStudentid","password","setPassword","passwordConfirm","setPasswordConfirm","major","setMajor","email","setEmail","isEmailVerified","setIsEmailVerified","errors","setError","message","handleSignup","e","preventDefault","newErrors","trim","alert","response","fetch","method","headers","body","JSON","stringify","student_number","data","json","prevErrors","error","console","toggleConfirmPswdVisibility","openModal","closeModal","togglePswdVisibility","sendVerificationEmail","children","GlobalStyles","fileName","_jsxFileName","lineNumber","columnNumber","MainSection","MainImage","src","alt","LoginForm","LoginText","placeholder","value","onChange","target","ErrorMessage","PasswordWrapper","Input","type","StyledIcon","icon","onClick","SelectWrapper","StyledSelect","disabled","EmailInputWrapper","EmailInput","EmailDomainLabel","Verify","includes","isVisible","onVerified","verified","StyledButton","_c","_c2","div","_c3","img","_c4","_c5","_c6","input","_c7","_c8","_c9","button","_c10","_c11","select","_c12","_c13","_c14","span","_c15","_c16","_c17","$RefreshReg$"],"sources":["D:/2023/rts/front2/Front/src/SignUp.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport loginimage from \"./images/login.jpg\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\nimport { faEyeSlash, faEye } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport InputField from \"./InputField\";\r\nimport Modal from \"./Modal\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const BASE_URL = process.env.BASE_URL;\r\n\r\nconst SignUp = () => {\r\n  const navigate = useNavigate();\r\n  const [showPswd, setShowPswd] = useState(false);\r\n  const [showConfirmPswd, setShowConfirmPswd] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [studentid, setStudentid] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [major, setMajor] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isEmailVerified, setIsEmailVerified] = useState(false);\r\n\r\n  const [errors, setError] = useState({\r\n    name: \"\",\r\n    studentid: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    major: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n  });\r\n  const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n    let newErrors = {\r\n      ...errors,\r\n      name: \"\",\r\n      studentid: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n      major: \"\",\r\n      email: \"\",\r\n    };\r\n\r\n    if (!name.trim()) {\r\n      newErrors.name = \"이름을 입력하세요\";\r\n    }\r\n    if (!studentid.trim()) {\r\n      newErrors.studentid = \"학번을 입력하세요\";\r\n    }\r\n    if (!password.trim()) {\r\n      newErrors.password = \"비밀번호를 입력하세요\";\r\n    }\r\n    if (!passwordConfirm.trim()) {\r\n      newErrors.passwordConfirm = \"비밀번호 확인란을 입력하세요\";\r\n    }\r\n    if (password !== passwordConfirm) {\r\n      newErrors.passwordConfirm =\r\n        \"비밀번호와 비밀번호 확인이 일치하지 않습니다!\";\r\n    }\r\n    if (major === \"\") {\r\n      alert(\"전공을 선택하세요!\");\r\n    }\r\n    if (!email.trim()) {\r\n      newErrors.email = \"이메일을 입력하세요\";\r\n    }\r\n    if (!isEmailVerified) {\r\n      alert(\"이메일 인증을 완료해주세요.\");\r\n      return;\r\n    }\r\n    setError(newErrors);\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/users/signup/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name: name,\r\n          student_number: studentid,\r\n          major: major,\r\n          password: password,\r\n          email: email,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.message === \"signup completed\") {\r\n        alert(\"회원가입 성공\");\r\n        navigate(\"/roadmap\");\r\n      } else {\r\n        setError((prevErrors) => ({\r\n          ...prevErrors,\r\n          message: data.message || \"회원 가입 실패!\",\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError((prevErrors) => ({\r\n        ...prevErrors,\r\n        message: \"서버와의 통신에 실패했습니다.\",\r\n      }));\r\n    }\r\n  };\r\n  const toggleConfirmPswdVisibility = () => {\r\n    setShowConfirmPswd(!showConfirmPswd);\r\n  };\r\n\r\n  const openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const togglePswdVisibility = () => {\r\n    setShowPswd(!showPswd);\r\n  };\r\n  const sendVerificationEmail = async () => {\r\n    try {\r\n      const response = await fetch(`${BASE_URL}/users/verify_email/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email: email + \"@sogang.ac.kr\" }),\r\n      });\r\n      const data = await response.json();\r\n    } catch (error) {\r\n      alert(\"인증번호 발송에 실패했습니다.\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <MainSection>\r\n        <MainImage src={loginimage} alt=\"Main\" />\r\n        <LoginForm>\r\n          <LoginText>회원가입하기</LoginText>\r\n          <InputField\r\n            name=\"username\"\r\n            placeholder=\"이름을 입력하세요\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          {errors.name && <ErrorMessage>{errors.name}</ErrorMessage>}\r\n\r\n          <InputField\r\n            name=\"studentid\"\r\n            placeholder=\"학번8자리를 입력하세요 ex) 20201234\"\r\n            value={studentid}\r\n            onChange={(e) => setStudentid(e.target.value)}\r\n          />\r\n          {errors.studentid && <ErrorMessage>{errors.studentid}</ErrorMessage>}\r\n\r\n          <PasswordWrapper>\r\n            <Input\r\n              type={showPswd ? \"text\" : \"password\"}\r\n              placeholder=\"비밀번호를 입력하세요\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <StyledIcon\r\n              icon={showPswd ? faEye : faEyeSlash}\r\n              onClick={togglePswdVisibility}\r\n            />\r\n          </PasswordWrapper>\r\n          {errors.password && <ErrorMessage>{errors.password}</ErrorMessage>}\r\n\r\n          <PasswordWrapper>\r\n            <Input\r\n              type={showConfirmPswd ? \"text\" : \"password\"}\r\n              placeholder=\"비밀번호를 다시한번 입력해주세요\"\r\n              value={passwordConfirm}\r\n              onChange={(e) => setPasswordConfirm(e.target.value)}\r\n            />\r\n            <StyledIcon\r\n              icon={showConfirmPswd ? faEye : faEyeSlash}\r\n              onClick={toggleConfirmPswdVisibility}\r\n            />\r\n          </PasswordWrapper>\r\n          {errors.passwordConfirm && (\r\n            <ErrorMessage>{errors.passwordConfirm}</ErrorMessage>\r\n          )}\r\n\r\n          <SelectWrapper>\r\n            <StyledSelect\r\n              value={major}\r\n              onChange={(e) => setMajor(e.target.value)}\r\n            >\r\n              <option value=\"\" disabled>\r\n                본전공을 선택하세요\r\n              </option>\r\n              <option value=\"경제\">경제학과</option>\r\n              <option value=\"경영\">경영학과</option>\r\n              <option value=\"컴퓨터공학과\">컴퓨터공학과</option>\r\n            </StyledSelect>\r\n          </SelectWrapper>\r\n          <EmailInputWrapper>\r\n            <EmailInput\r\n              name=\"email\"\r\n              placeholder=\"서강대학교 email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <EmailDomainLabel>@sogang.ac.kr</EmailDomainLabel>\r\n          </EmailInputWrapper>\r\n          {errors.email && <ErrorMessage>{errors.email}</ErrorMessage>}\r\n\r\n          <Verify\r\n            onClick={() => {\r\n              if (email.includes(\"@\")) {\r\n                setError((prevErrors) => ({\r\n                  ...prevErrors,\r\n                  email:\r\n                    \"올바른 이메일 형식이 아닙니다! @sogang.ac.kr 도메인은 자동으로 추가됩니다.\",\r\n                }));\r\n              } else {\r\n                openModal();\r\n                sendVerificationEmail();\r\n              }\r\n            }}\r\n          >\r\n            이메일 인증 키 발송\r\n          </Verify>\r\n          <Modal\r\n            isVisible={showModal}\r\n            closeModal={closeModal}\r\n            email={email + \"@sogang.ac.kr\"}\r\n            onVerified={(verified) => setIsEmailVerified(verified)}\r\n          />\r\n\r\n          <StyledButton type=\"submit\" onClick={handleSignup}>\r\n            <span>회원가입하기</span>\r\n          </StyledButton>\r\n        </LoginForm>\r\n      </MainSection>\r\n    </>\r\n  );\r\n};\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n  }\r\n`;\r\nconst MainSection = styled.div`\r\n  width: 100%;\r\n\r\n  justify-content: center;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-position: top center;\r\n  background-size: cover;\r\n  background-attachment: fixed;\r\n  position: relative;\r\n\r\n  margin: 0 auto;\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    width: 100%;\r\n    padding: 40px 20px;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst MainImage = styled.img`\r\n  width: 100%;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst LoginForm = styled.div`\r\n  position: absolute;\r\n  border: 1px solid #ababab;\r\n  border-radius: 10px;\r\n  box-shadow: 5px 10px 10px 1px rgba(0, 0, 0, 0.3);\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  padding: 45px;\r\n  background: rgba(255, 255, 255, 0.8);\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n  width: 300px;\r\n`;\r\nconst LoginText = styled.div`\r\n  font-size: 1.5em;\r\n  font-weight: 700;\r\n`;\r\nconst Input = styled.input`\r\n  padding: 13px;\r\n  border-radius: 10px;\r\n  border: 1px solid #ababab;\r\n  background: #fff;\r\n  width: 89%;\r\n`;\r\n\r\nconst PasswordWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst StyledIcon = styled(FontAwesomeIcon)`\r\n  position: absolute;\r\n  right: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  cursor: pointer;\r\n  width: 20.5vw;\r\n  height: 6vh;\r\n  border-radius: 60px;\r\n  border: 2px solid #ff6262;\r\n  background: #ff6262;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 50vw;\r\n    height: 7vh;\r\n  }\r\n  span {\r\n    color: #fff;\r\n    text-align: center;\r\n    font-family: Noto Sans;\r\n    font-size: 1.1rem;\r\n    font-style: normal;\r\n    font-weight: 700;\r\n    line-height: normal;\r\n  }\r\n`;\r\n\r\nconst Verify = styled.div`\r\n  text-align: center;\r\n  text-decoration: underline;\r\n  color: #7a7a7a;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledSelect = styled.select`\r\n  padding: 13px;\r\n  border-radius: 10px;\r\n  border: 1px solid #ababab;\r\n  background: #fff;\r\n  width: 98.5%;\r\n  appearance: none;\r\n  padding-right: 30px;\r\n`;\r\n\r\nconst SelectWrapper = styled.div`\r\n  position: relative;\r\n  width: 89%%;\r\n\r\n  & svg {\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 10px;\r\n    transform: translateY(-50%);\r\n  }\r\n`;\r\n\r\nconst EmailInputWrapper = styled.div`\r\n  display: flex;\r\n  width: 98.5%;\r\n  align-items: center;\r\n  border: 1px solid #ababab;\r\n  border-radius: 10px;\r\n  margin-top: 10px;\r\n  background: rgba(255, 255, 255, 0.8);\r\n`;\r\n\r\nconst EmailDomainLabel = styled.span`\r\n  padding: 13px;\r\n  pointer-events: none;\r\n  color: #707070;\r\n  background: rgba(255, 255, 255, 0.8);\r\n  border-radius: 0 10px 10px 0;\r\n`;\r\n\r\nconst EmailInput = styled(Input)`\r\n  flex-grow: 1; /* input 필드가 가능한 영역을 모두 차지하도록 함 */\r\n  border-radius: 10px 0 0 10px;\r\n  border: none;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  font-size: 0.8rem;\r\n  margin-left: 1rem;\r\n`;\r\n\r\nexport default SignUp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}